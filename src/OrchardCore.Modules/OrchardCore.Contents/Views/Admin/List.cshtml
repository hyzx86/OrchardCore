@model ListContentsViewModel
@using OrchardCore.ContentManagement;
@using OrchardCore.Contents.ViewModels;
@inject IContentManager ContentManager
@inject OrchardCore.Environment.Shell.ShellSettings ShellSettings

@{
    var contentTypeDisplayName = Model.Options.ContentTypeOptions.Find(x => x.Value == Model.Options.SelectedContentType && x.Value != null)?.Text;
    var pageTitle = T["Manage Content"];
    var createLinkText = T["Create New Content"];
    if (!string.IsNullOrWhiteSpace(contentTypeDisplayName))
    {
        pageTitle = T["Manage {0} Content", (string)contentTypeDisplayName];
        createLinkText = T["Create New {0}", (string)contentTypeDisplayName];
    }

    var tenantPrefix = ("/" + ShellSettings.RequestUrlPrefix ?? string.Empty).TrimEnd('/');
    var formActionWithoutTypeName = tenantPrefix + "/Admin/Contents/ContentItems";
}

<h1>@RenderTitleSegments(pageTitle)</h1>
@using (Html.BeginForm("List", "Admin", FormMethod.Post, new { id = "items-form", autocomplete = "off" }))
{
    <!-- Hidden submit button do not remove -->
    <input type="submit" name="submit.Filter" id="submitFilter" class="d-none" />

    <fieldset class="filter-options">
        <div class="card mb-3">
            <div class="card-body bg-light">
                <div class="row">
                    <div class="form-group col-xl-3 mb-xl-n1">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text bg-secondary text-light">@T["Title"]</span>
                            </div>
                            <input asp-for="Options.DisplayText" class="form-control" />
                        </div>
                    </div>
                    <div class="form-group col-xl-3 mb-xl-n1">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text bg-secondary text-light">@T["Filter"]</span>
                            </div>
                            <select asp-for="Options.SelectedContentType" class="form-control" asp-items="Model.Options.ContentTypeOptions"></select>
                        </div>
                    </div>

                    @*@if (cultures.Count() > 1) {
                        <div class="col-md-2 col-xl-1 form-group">
                            <label for="filterCultures" class="label col-form-label">@T["Culture"]</label>
                        </div>
                        <div class="col-md-4 col-xl-3 form-group">
                            <select id="filterCultures" class="form-control" name="Options.SelectedCulture">
                                <option value="">@T["All cultures"]</option>
                                @foreach (string culture in cultures) {
                                    string isSelected = culture == Model.Options.SelectedCulture ? "selected='selected'" : string.Empty;
                                    <!option @isSelected value="culture">@System.Globalization.CultureInfo.GetCultureInfo(culture).DisplayName</!option>
                                }
                            </select>
                        </div>
                        }*@
                    <div class="form-group col-xl-3 mb-xl-n1">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text bg-secondary text-light">@T["Show"]</span>
                            </div>
                            <select asp-for="Options.ContentsStatus" class="form-control" asp-items="@Model.Options.ContentStatuses"></select>
                        </div>
                    </div>
                    <div class="form-group col-xl-3 mb-n1">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text bg-secondary text-light">@T["Sort by"]</span>
                            </div>
                            <select asp-for="Options.OrderBy" class="form-control" asp-items="@Model.Options.ContentSorts"></select>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </fieldset>
    @*<div class="row">
        <div class="form-group col-xl-8">
            <div class="input-group">
                <div class="input-group-text">
                    <input type="checkbox" id="select-all">
                </div>

                <div class="input-group-append">
                    <span class="input-group-text" id="inputGroup-sizing-sm">@T["Select All"]</span>
                </div>
            </div>
        </div>
        <div class="form-group col-xl-4 float-right">
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text bg-secondary text-light">@T["Actions"]</span>
                </div>
                <select asp-for="Options.BulkAction" class="form-control" asp-items="@Model.Options.ContentsBulkAction"></select>
                <div class="input-group-append">
                    <button class="input-group-text bg-secondary text-light" type="submit" name="submit.BulkEdit">@T["Apply"]</button>
                </div>
            </div>
        </div>
    </div>*@
    @if (Model.ContentItems.Count > 0)
    {
        <ul class="list-group">
            @foreach (var contentItemSummary in Model.ContentItems)
            {
                <li class="list-group-item">
                    @await DisplayAsync(contentItemSummary)
                </li>
            }
        </ul>
    }
    else
    {
        <div class="alert alert-info">
            @T["No result found."]
        </div>
    }

    @await DisplayAsync(Model.Pager)
}

@* This is because ContentTypesAdminNode requires the ContenType to be available as part of the url *@
<script at="Foot" type="text/javascript">
    $(function () {
        $("#Options_SelectedContentType").change(function (e) {
            var value = $('#Options_SelectedContentType option:selected').val();
            console.log(value);
            var newAction = '@formActionWithoutTypeName' + '/' + value;
            $('#items-form').attr('action', newAction);
        });
    })
    $(function () {
        $(".filter-options select, .filter-options input").on("change", function () {
            $("#submitFilter").click();
        });
    })
</script>
