@using OrchardCore.Spatial.ViewModels
@using OrchardCore.Spatial.Settings
@using OrchardCore.Mvc.Utilities
@model EditGeoPointFieldViewModel
@{
    var settings = Model.PartFieldDefinition.Settings.ToObject<GeoPointFieldSettings>();
    var uniqueName = $"{Model.PartFieldDefinition.PartDefinition.Name}-{Model.PartFieldDefinition.Name}";
}

<div class="form-row field-wrapper field-wrapper-@uniqueName.HtmlClassify()" id="@Html.IdFor(x => x)_FieldWrapper">
    <div class="mb-3 col-md-4">
        <label asp-for="Latitude">@T["Latitude"]</label>
        <input asp-for="Latitude" type="number" min="-90.000000" max="90.000000" step=".000001" placeholder="00.000000" class="form-control content-preview-text" required="@settings.Required" />
        @if (!string.IsNullOrEmpty(settings.Hint))
        {
            <span class="hint">@settings.Hint</span>
        }
    </div>
    <div class="mb-3 col-md-4">
        <label asp-for="Longitude">@T["Longitude"]</label>
        <input asp-for="Longitude" type="number" min="-180.000000" max="180.000000" step=".000001" placeholder="00.000000" class="form-control content-preview-text" required="@settings.Required" />
        @if (!string.IsNullOrEmpty(settings.Hint))
        {
            <span class="hint">@settings.Hint</span>
        }
    </div>
</div>
